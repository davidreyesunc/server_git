mosquitto.conf man page
https://mosquitto.org/man/mosquitto-conf-5.html

How to Configure Mosquitto MQTT Broker in Docker
https://cedalo.com/blog/mosquitto-docker-configuration-ultimate-guide/


####################################################################################################################################
#                                                  Configuración Global del Broker
####################################################################################################################################
per_listener_settings true


####################################################################################################################################
#                                             Configuración Particular del Listener MQTT
####################################################################################################################################
# Habilitar el listener para mTLS
# Cualquier conexión que llegue a la IP 10.10.10.10 puerto 8883 será procesada por las reglas que siguen
listener 8883 10.10.10.10
# Sólo se aceptan conexiones con protocolo MQTT versión 3.1.1
protocol mqttv311
# Se conservarán todas las suscripciones de los clientes en caso de que se caiga la conexión de red
cleansession false 

# Autenticación del Servidor
# Rutas a los certificados del Broker de Mosquitto
cafile ../certs/ca.crt              
certfile ../certs/server.crt
keyfile ../certs/server.key

# Autenticación de los clientes
# Deshabilitar conexiones no encriptadas
allow_anonymous false
# Habilitar mTLS (Autenticación mutua a través de certificados)
# El broker exige que todos y cada uno de los clientes que intenten conectarse a este puerto presenten un certificado de cliente válido
# Si un cliente no lo hace, la conexión es rechazada
require_certificate true
# Esta directiva instruye a Mosquitto para que use el Common Name (CN) del certificado de cliente como el nombre de usuario. 
# Esto se aplica a todos los clientes con un certificado válido. 
# Es una forma de autenticación mutua que elimina la necesidad de nombres de usuario y contraseñas.
use_identity_as_username true

# Configuración SSL/TLS
# Sólo se aceptan conexiones que utilicen la versión 1.2 de TLS
tls_version tlsv1.2
# y el cifrado específico:
# (para listar los cifradores disponibles utilizar el comando openssl ciphers)
# ECDHE: algoritmo de intercambio de claves con Perfect Forward Secrecy (PFS) durante el handshake TLS.
# PFS: si una clave privada de largo plazo es comprometida en el futuro, las comunicaciones anteriores no se verán afectadas, 
# ya que las claves de sesión ya no existen.
# ECDSA: algoritmo de firma digital que se usa para autenticar el servidor (el broker Mosquitto) y el cliente (SIM7070G)
#        durante el handshake TLS.
# AES_128_GCM: 
#              AES-128: algoritmo de cifrado simétrico que encripta los datos de la aplicación (confidencialidad). 
#              GCM: aporta integridad de los datos y autenticación del mensaje (no del usuario)
# SHA256: algoritmo de función hash que se utiliza para verificar la integridad de los mensajes durante el proceso de handshake TLS.
ciphers ECDHE-ECDSA-AES128-GCM-SHA256
# Directiva de ACL
acl_file /etc/mosquitto/acl/clients.acl

# Habilitar logs para depuración
log_type all
connection_messages true
log_dest file ../logs/mosquitto.log

# Máximas conexiones simultáneas
max_connections 5
